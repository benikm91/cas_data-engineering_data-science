ng-template('#slides'='')
    tables-of-content-pca
    tables-of-content-pca([active]="pcaLabel.MODEL")
    section
        slide-with-header(header="Dimensionality Reduction - PCA")
            ul
                li Können wir #[span.highlight bessere Features] selektieren?
            div.mt-5.d-flex.justify-center
                div.r-stack
                    img.fragment(src="assets/images/pca/feature-selection-data-only.png")
                    img.fragment(src="assets/images/pca/pca-1.png")
            div.fragment.text-center.alert.alert-success
                | PCA #[span.highlight fasst] Features zu einem #[span.highlight neuen Feature zusammen].
                | Dadurch gehen #[span.highlight weniger Informationen (Daten Varianz) verloren].
    section
        slide-with-header(header="PCA - Modell")
            ul
                li Wir suchen die #[span.highlight Principal Components] (Hauptkomponenten) des Datensatzes
                li Die Hauptkomponenten werden #[span.highlight zu unserem neuen Koordinatensystem] (neuen Features)
            .row.mt-5
                .col-6
                    h6 Hauptkomponenten im Input Space
                    div.d-flex.justify-center
                        div.r-stack
                            img(src="assets/images/pca/pca-2d-anim-data.png")
                            img.fragment(src="assets/images/pca/pca-2d-anim-1.png")
                            img.fragment(src="assets/images/pca/pca-2d-anim-2.png")
                .col-6.fragment
                    h6 Daten im PC-Space
                    div.d-flex.justify-center
                        img(src="assets/images/pca/pca_2d.gif")
    section
        slide-with-header(header="PCA - PC Selection")
            div Im PC-Space machen wir dann "Feature Selection", sprich wir #[span.highlight werfen die weniger wichtigen Hauptkomponenten (neuen "Features") weg].
            .row.mt-5
                .col-6.fragment
                    div.d-flex.justify-center
                        img(src="assets/images/pca/pca-selection-1.png")
                .col-6.fragment
                    div.d-flex.justify-center
                        img(src="assets/images/pca/pca-1.png")
            div.fragment.mt-4.text-center.alert.alert-warning Weniger Informationsverlust, aber es gehen weiterhin Informationen verloren!
    section
        slide-with-header(header="PC Selection vs. Feature Selection - Intuition", [extra]="true")
            ul
                li Die #[span.highlight Principal Components (PC)] Selection #[span.highlight verliert weniger Information] als die Feature Selection.
                li.fragment Hoffnung: Wir können dann damit besser ein Modell lernen (z.B. #[span.code-font weight] eines Fisches).
            div.fragment
                img(src="assets/images/pca/pca-example.png")
                // div.text-center.alert.alert-success Bereits 2 Dimensional zu 1 Dimensional sichtbar
            div.fragment.text-center.alert.alert-warning In Praxis nur für viel mehr Features #[span.highlight notwendig]!
    section
        slide-with-header(header="PC Selection vs. Feature Selection - Intuition", [extra]="true")
            div.fragment
                h6 Original Image (100%)
                img(src="assets/images/pca/example-img.png").img-fluid.limit-possible
            .row.mt-5
                .col-6.fragment
                    h6 Feature Selection: Pixels of 200 Features (9.3%)
                    img(src="assets/images/pca/example-img-pixel-selection.png").img-fluid.limit-impossible
                .col-6.fragment
                    h6 PC-Selection: Reconstruction 200 Features (PCA) (94.4%)
                    img(src="assets/images/pca/example-img-reconstruction.png").img-fluid.limit-possible
    section
        slide-with-header(header="PCA - Mehrere Features", [extra]="true")
            side-by-side-3
                div(first).d-flex.flex-column
                    h3 1 Feature
                    div.mt-5.d-flex.justify-center
                        div.r-stack
                            img.fragment(src="assets/images/pca/pca-1d-anim-data.png")
                            img.fragment(src="assets/images/pca/pca-1d-anim-1.png")
                            img.fragment(src="assets/images/pca/pca-1d-anim-pc1.png")
                div(second).d-flex.flex-column
                    h3 2 Feature
                    div.mt-5.d-flex.justify-center
                        div.r-stack
                            img(src="assets/images/pca/pca-2d-anim-2.png")
                div(third).d-flex.flex-column
                    h3 3 Feature
                    div.mt-5.d-flex.justify-center
                        div.r-stack
                            img.fragment(src="assets/images/pca/pca-3d-anim-data.png")
                            img.fragment(src="assets/images/pca/pca-3d-anim-1.png").img-fluid
                            img.fragment(src="assets/images/pca/pca-3d-anim-2.png").img-fluid
                            img.fragment(src="assets/images/pca/pca-3d-anim-3.png").img-fluid
                            img.fragment(src="assets/images/pca/pca-3d-3.gif").img-fluid
                            img.fragment(src="assets/images/pca/pca-3d-anim-3.png").img-fluid
    section
        slide-with-header(header="PCA - PC Selection")
            h6 Idee
            div.d-flex.justify-center.mt-5
                model-3-visualization("#pcaRotSel"="").mt-5
                    div(inputHeader)
                        div(style={marginTop: "-50px"})
                            h5(style={marginBottom: "0"}) Input Space
                            h6(margin="0") 2 Features
                    div(featureHeader)
                        div(style={marginTop: "-50px"})
                            h5(style={marginBottom: "0"}) PC Space
                            h6(margin="0") 2 Features
                    div(outputHeader)
                        div(style={marginTop: "-50px"})
                            h5(style={marginBottom: "0"}) PC Space
                            h6(margin="0") 1 Features
                    div(input).rect-styling
                        img(src="assets/images/pca/data-input-space.png")
                    div(pre).model-box.code
                        div "Rotate"
                    div(feature).fix-height.code
                        img(src="assets/images/pca/data-pca-space.png")
                    div(model).model-box.code
                        div PC Selection
                    div(output).rect-styling
                        img(src="assets/images/pca/data-pca-space-1d.png")
                span.fragment(fragment-trigger, "(trigger)"="pcaRotSel.end()")
            div.mt-5.fragment
                h6 Praxis
                div.d-flex.justify-center.mt-5
                    model-visualization("#pcaDirect"="")
                        div(inputHeader)
                            div(style={marginTop: "-50px"})
                                h5(style={marginBottom: "0"}) Input Space
                                h6(margin="0") 2 Features
                        div(outputHeader)
                            div(style={marginTop: "-50px"})
                                h5(style={marginBottom: "0"}) PC Space
                                h6(margin="0") 1 Features
                        div(input).rect-styling
                            img(src="assets/images/pca/data-input-space.png")
                        div(model).model-box.code
                            div PCA #[span.code.small (n_components=1)]
                            div.code.small fit_transform
                        div(output).rect-styling
                            img(src="assets/images/pca/data-pca-space-1d.png")
                    span.fragment(fragment-trigger, "(trigger)"="pcaDirect.end()")
    section
        slide-with-header(header="Dimensionsreduktion - PCA")
            div.d-flex.justify-content-center.fragment
                model-visualization("#pcaEncOnly"="").mt-5
                    div(inputHeader)
                        div(style={marginTop: "-75px"})
                            h5(style={marginBottom: "0"}) Input Space
                            h6(margin="0") 3072 Features
                    div(input).rect-styling
                        img(src="assets/images/pca/example-img.png", style={height: "150px"})
                    div(model, class="model").model-box.code
                        div Encoder
                        div #[span.code.small PCA.transform]
                    div(output, class="output").fix-height.code [ 167, 235, 207, 76, 97, 119, 50, 8, 239, 168, 215, ... ]
                    div(outputHeader)
                        div(style={marginTop: "-75px"})
                            h5(style={marginBottom: "0"}) Latent Space
                            h6(margin="0") 200 Features
                span.fragment(fragment-trigger, "(trigger)"="pcaEncOnly.end()")
            div.fragment
                h5.mt-5 PCA kommt mit einem Decoder
                div.d-flex.justify-content-center
                    model-3-visualization("#pcaEncDec"="").mt-5
                        div(inputHeader)
                            div(style={marginTop: "-75px"})
                                h5(style={marginBottom: "0"}) Input Space
                                h6(margin="0") 3072 Features
                        div(featureHeader)
                            div(style={marginTop: "-50px"})
                                h5(style={marginBottom: "0"}) Latent Space
                                h6(margin="0") 200 Features
                        div(outputHeader)
                            div(style={marginTop: "-100px"})
                                h5(style={marginBottom: "0"}) Reconstructed Input Space
                                h6(margin="0") 3072 Features
                        div(input).rect-styling
                            img(src="assets/images/pca/example-img.png")
                        div(pre).model-box.code
                            div Encoder
                            div.small PCA.transform
                        div(feature).fix-height.code
                            div [ -57.2, -3.6, ..., 2.3, -3.4 ]
                        div(model).model-box.code
                            div Decoder
                            div.small PCA.inverse_transform
                        div(output).rect-styling
                            img(src="assets/images/pca/example-img-reconstruction.png")
                    span.fragment(fragment-trigger, "(trigger)"="pcaEncDec.end()")
            div.fragment.mt-5.text-center.alert.alert-success Decoder kann visualisieren, was #[span.highlight verloren] geht.
    section
        slide-with-header(header="Dimensionsreduktion - PCA als Preprocessing")
            div.mt-5.d-flex.justify-content-center.fragment
                model-3-visualization("#pcaWithModel"="", output-header="Output Space" )
                    div(inputHeader)
                        div(style={marginTop: "-75px"})
                            h5(style={marginBottom: "0"}) Input Space
                            h6(margin="0") 3072 Features
                    div(featureHeader)
                        div(style={marginTop: "-50px"})
                            h5(style={marginBottom: "0"}) Latent Space
                            h6(margin="0") 200 Features
                    div(input).rect-styling
                        img(src="assets/images/pca/example-img.png")
                    div(pre).model-box
                        div Encoder
                        div.small PCA.transform
                    div(feature).fix-height.code
                        | [ -57.2, -3.6, ..., 2.3, -3.4 ]
                    div(model).model-box
                        div Modell
                        div #[span.code.small z.B. LogisticRegression]
                    div(output).rect-styling
                        div.code Deer
                span.fragment(fragment-trigger, "(trigger)"="pcaWithModel.end()")
    section
        slide-with-header(header="PCA - Modell")
            div.fragment
                div.d-flex.justify-content-center
                    model-3-visualization("#pcaEncDec"="", [with-trigger]="false").mt-5
                        div(inputHeader)
                            div(style={marginTop: "-75px"})
                                h5(style={marginBottom: "0"}) Input Space
                                h6(margin="0") 3072 Features
                        div(featureHeader)
                            div(style={marginTop: "-50px"})
                                h5(style={marginBottom: "0"}) Latent Space
                                h6(margin="0") 200 Features
                        div(outputHeader)
                            div(style={marginTop: "-100px"})
                                h5(style={marginBottom: "0"}) Reconstructed Input Space
                                h6(margin="0") 3072 Features
                        div(input).rect-styling
                            img(src="assets/images/pca/example-img.png")
                        div(pre).model-box.code
                            div([mathjax]="encoder")
                            div.small PCA.transform
                        div(feature).fix-height.code
                            div [ -57.2, -3.6, ..., 2.3, -3.4 ]
                        div(model).model-box.code
                            div([mathjax]="decoder")
                            div.small PCA.inverse_transform
                        div(output).rect-styling
                            img(src="assets/images/pca/example-img-reconstruction.png")
                    span.fragment(fragment-trigger, "(trigger)"="pcaEncDec.end()")
            div.mt-5.fragment
                div.d-flex.justify-content-center
                    model-3-visualization("#pcaEncDec"="", [with-trigger]="false").mt-5
                        div(inputHeader)
                            div(style={marginTop: "-75px"})
                                h5(style={marginBottom: "0"}) Input Space
                                h6(margin="0")
                                    span(style={textTransform: "none"}, mathjax="<math><mi>m</mi></math>")
                                    | &nbsp;
                                    | Features
                        div(featureHeader)
                            div(style={marginTop: "-50px"})
                                h5(style={marginBottom: "0"}) Latent Space
                                h6(margin="0")
                                    span(style={textTransform: "none"}, mathjax="<math><mi>l</mi></math>")
                                    | &nbsp;
                                    | Features
                        div(outputHeader)
                            div(style={marginTop: "-100px"})
                                h5(style={marginBottom: "0"}) Reconstructed Input Space
                                h6(margin="0")
                                    span(style={textTransform: "none"}, mathjax="<math><mi>p</mi></math>")
                                    | &nbsp;
                                    | Features
                        div(input).rect-styling
                            img(src="assets/images/pca/example-img.png")
                        div(pre).model-box.code
                            div([mathjax]="encoderWithDim")
                            div.small PCA.transform
                        div(feature).fix-height.code
                            div [ -57.2, -3.6, ..., 2.3, -3.4 ]
                        div(model).model-box.code
                            div([mathjax]="decoderWithDim")
                            div.small PCA.inverse_transform
                        div(output).rect-styling
                            img(src="assets/images/pca/example-img-reconstruction.png")
                    span.fragment(fragment-trigger, "(trigger)"="pcaEncDec.end()")
            div.fragment.mt-5.text-center.alert.alert-primary
                div([mathjax]="encoderWithDecoder")
    // section
    //     slide-with-header(header="PCA - Code")
    //         div.notebook-name pca.ipynb
    //         img(src="assets/images/code.png")
    tables-of-content-pca([active]="pcaLabel.DATA_SPECIFICATION")
    section
        slide-with-header(header="PCA - Data Specification")
            ol
                li.fragment Welche #[span.highlight Features] haben wir, z.B. #[span.code-font pixel]
                li.fragment Kategorische Features müssen für das Modell #[span.highlight encoded] werden.
                li.fragment Numerische Features müssen #[span.highlight standardisiert] werden.
            div.fragment.mt-5.text-center.alert.alert-primary Beachte: Wir haben keine Zielvariable. Wir sind im #[span.highlight Unsupervised Learning]
    tables-of-content-pca([active]="pcaLabel.COST_FUNCTION")
    section
        slide-with-header(header="PCA - Cost function")
            div([mathjax]="costFunction")
            div.fragment.mt-5.text-center.alert.alert-primary
                | #[span.highlight L2-Distanz] der Rekonstruktion.
            div.fragment.mt-5.text-center.alert.alert-primary
                | Encoder und Decoder sind einfach eine Matrix, beziehungsweise sind #[span.highlight linear].
    tables-of-content-pca([active]="pcaLabel.OPTIMIERUNG")
    section
        slide-with-header(header="PCA - Optimierung", [extra]="true")
            ul
                li "Einfache" Lineare Algebra
                li Schauen wir nicht im Detail an.
                li Nutzt Singular Value Decomposition (SVD)
                hr
                li.code-font U, S, V = numpy.linalg.svd(X.T)
                li
                    span.code-font U
                    | &nbsp;
                    span sind unsere Principal Components (Achsen)
                li
                    span.code-font S
                    | &nbsp;
                    span ist die Wichtigkeit der Achsen.
                li
                    span.code-font W = U[:, 0:l]
    section
        slide-with-header(header="PCA - Limits", [extra]="true")
            div.row
                div.col-5.offset-1
                    h6 Possible
                div.col-5
                    h6 Impossible (in Feature Space)
                div.col-1
            div.row.fragment
                div.col-1.m-auto
                    h6(style={transform: "rotate(-90deg)", whiteSpace: 'nowrap', marginBottom: "-300px"}) 2 Features zu 1
                div.col-5.p-2
                    img(src="assets/images/pca/example-data-with-model-2d-possible.png").limit-possible
                div.col-5.p-2
                    img(src="assets/images/pca/example-data-with-model-2d-limit.png").limit-impossible
                div.col-1
            div.row.fragment
                div.col-1.m-auto
                    h6(style={
                        transform: "rotate(-90deg)",
                        whiteSpace: 'nowrap',
                        marginBottom: "-300px"
                    }) 3 Features zu 2
                div.col-5.p-2
                    img(src="assets/images/pca/pca-limit-3d.png").limit-possible
                div.col-5.p-2.fragment
                    img(src="assets/images/pca/pca-limit-3d-isomap.png").limit-impossible
                div.col-1
            div.mt-2.fragment.text-center.alert.alert-warning
                .row
                    .col-12 PCA hat #[span.highlight die starke Annahme], dass das #[span.highlight gesuchtes Manifold linear im Feature-Space] ist!
    section
        slide-with-header(header="PCA - Wann")
            ul
                li Datenreduzieren für Speicherplatz
                li Datenreduzieren für Speed-up von folge Modell
            div.mt-5.fragment.text-center.alert.alert-danger
                | PCA #[span.highlight nicht verwenden für Overfitting]. Bei Overfitting ist #[span.highlight Regularisierung] meistens die bessere Wahl.
    section
        slide-with-header(header="Alternative & Additional Resources", [extra]="true").smaller-font
            ul
                li
                    div [Alternative] Dimensionality Reduction and PCA
                        ul
                            li
                                a(href="https://www.youtube.com/watch?v=Zbr5hyJNGCs") Video: "Lecture 14.1 bis Lecture 14.7"
                li
                    div [Additional] SVD & PCA
                    ul
                        li Einführung in SVD
                            a(href="https://www.youtube.com/watch?v=CpD9XlTu3ys") Video: "What is the Singular Value Decomposition?"
                        li SVD und PCA in mehr Detail:
                            a(href="https://www.youtube.com/watch?v=EokL7E6o1AE") Lecture: The Singular Value Decomposition (SVD)
                            br
                            a(href="https://www.youtube.com/watch?v=a9jdQGybYmE") Lecture: Principal Componenet Analysis (PCA)
                li
                    div [Additional] Weitere Dimensionality Reductions
                    ul
                        li Factor analysis
                        li Independent component analysis (ICA)
                        li Isomap
                        li ...